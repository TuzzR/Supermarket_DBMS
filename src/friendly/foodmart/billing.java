package friendly.foodmart;
import java.lang.Math;   
import java.awt.event.KeyEvent;
import java.util.logging.Logger;
import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Vedamurthy SP
 */
public class billing extends javax.swing.JFrame {
    int sum =0;
    public void sendtotal(){
        String tot = txttotal.getText();
        //friendly.foodmart.billfinal.gettotal(tot);
    }
    
    
    public void Bill(){
        String total = txttotal.getText();
        DefaultTableModel model = new DefaultTableModel();
        //model = (DefaultTableModel)itemtable.getModel();
        txtbill.setText(txtbill.getText() + "*******************************************************\n");
        txtbill.setText(txtbill.getText() + "              BILL                                     \n");
        txtbill.setText(txtbill.getText() + "*******************************************************\n");
        txtbill.setText(txtbill.getText() + "Product" + "\t" + "Price" + "\t" + "Quantity" + "\t" + "Amount" +"\n" );
        for(int i = 0; i < model.getRowCount(); i++)
          {
              
              String pname = (String)model.getValueAt(i, 1);
              String price = (String)model.getValueAt(i, 2);
              String Quantity = (String)model.getValueAt(i, 3);
              String amount = (String)model.getValueAt(i, 4); 
              
           txtbill.setText(txtbill.getText() + pname  + "\t" + price + "\t" + Quantity  + "\t" + amount + "\n" );
    
          }
        txtbill.setText(txtbill.getText() + "\n");     
          
          txtbill.setText(txtbill.getText() + "\t" + "\t" + "Subtotal :" + total + "\n");
          txtbill.setText(txtbill.getText() + "\n");
          txtbill.setText(txtbill.getText() + "*******************************************************\n");
          txtbill.setText(txtbill.getText() + "           THANK YOU COME AGIN             \n");
          
//        try{
//            ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
//            Statement st = con.createStatement();
//            String sql = "delete from billing";
//            ResultSet rs= st.executeQuery(sql);
//            DefaultTableModel tbModel = (DefaultTableModel)itemtable.getModel();
////            while(rs.next()){
////                
////                String bill_id = String.valueOf(rs.getInt("bill_id"));
////                String p_name= rs.getString("p_name");
////                String p_cost = String.valueOf(rs.getInt("p_cost"));
////                String p_qty = String.valueOf(rs.getInt("p_qty"));
////                String amt = String.valueOf(rs.getInt("p_amt"));
////                String tbdata[]={bill_id, p_name, p_cost, p_qty, amt};
////                DefaultTableModel tbModel1 = (DefaultTableModel)itemtable.getModel();
////                tbModel1.addRow(tbdata);
////            }
////            int sum = 0;
////            for(int i = 0; i<itemtable.getRowCount(); i++)
////                {
////                    sum = sum + Integer.parseInt(itemtable.getValueAt(i, 4).toString());
////                }
////                txttotal.setText(Integer.toString(sum));
//                    
//                
////            billid.setText("");
////            p_name.setText("");
////            itemprice.setText("");
////            itemqty.setValue(0);
////            amt.setText("");
////            txttotal.setText("");
//            con.close();
//        }
//        catch(Exception e){
//            System.out.println(e.getMessage());
//        }
    }

    /**
     * Creates new form billing
     */
    public billing() {
        initComponents();
    }
    
//    Connection con;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        p_id = new javax.swing.JLabel();
        item_name = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pid = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        pname = new javax.swing.JTextPane();
        item_qty = new javax.swing.JLabel();
        item_price = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        itemprice = new javax.swing.JTextPane();
        Back = new javax.swing.JButton();
        Refresh = new javax.swing.JButton();
        itemqty = new javax.swing.JSpinner();
        amount = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        amt = new javax.swing.JTextPane();
        amount1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txttotal = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtbill = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        itemtable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        addtobill = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        bill = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        printbill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("BILLING");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        p_id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        p_id.setText("P ID");

        item_name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        item_name.setText("NAME");

        pid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pidKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(pid);

        jScrollPane2.setViewportView(pname);

        item_qty.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        item_qty.setText("QUANTITY");

        item_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        item_price.setText("PRICE");

        jScrollPane4.setViewportView(itemprice);

        Back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Refresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Refresh.setText("REFRESH TABLE");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        itemqty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                itemqtyStateChanged(evt);
            }
        });

        amount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        amount.setText("AMOUNT");

        jScrollPane6.setViewportView(amt);

        amount1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        amount1.setText("TOTAL");

        jScrollPane7.setViewportView(txttotal);

        txtbill.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(txtbill);

        itemtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P ID", "NAME", "PRICE", "QUANTITY", "AMOUNT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        itemtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemtableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(itemtable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(p_id)
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(item_name)
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(item_price)
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(item_qty)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(itemqty, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(351, 351, 351)))
                        .addComponent(Back))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(amount1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 77, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 932, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(amount)
                                .addGap(22, 22, 22)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addComponent(jLabel1))
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(item_name))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p_id)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(item_qty)
                            .addComponent(itemqty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amount))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(item_price)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(amount1)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Refresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        update.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        addtobill.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addtobill.setText("ADD ITEM");
        addtobill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtobillActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        bill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bill.setText("GENERATE BILL");
        bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        printbill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        printbill.setText("PRINT BILL");
        printbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(printbill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addtobill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(clear)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(addtobill)
                .addGap(48, 48, 48)
                .addComponent(update)
                .addGap(52, 52, 52)
                .addComponent(delete)
                .addGap(44, 44, 44)
                .addComponent(bill)
                .addGap(32, 32, 32)
                .addComponent(printbill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clear)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        pid.setText("");
        pname.setText("");
        itemprice.setText("");
//        itemqty.setValue("");
        amt.setText("");
//        billid.setText("");
//        date.setText("");
//        time.setText("");
//        mode.setText("");
        txttotal.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        if(pname.getText().isEmpty()||pid.getText().isEmpty()||itemprice.getText().isEmpty()||item_qty.getText().isEmpty())
        {
           JOptionPane.showMessageDialog(this, "Missing Information"); 
        }
        else{
        try
        {
           
            Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
            //String bid2=pid.getText();
            //String Query="Update customer set custname='"+cust_name.getText()+"'"+",custphno='"+cust_phno.getText()+"'"+",custgender'"+cust_gender.getText()+"'"+"where custid="+cust_id.getText();
             //Statement st = Con.createStatement();
             //st.executeUpdate(Query);
            //JOptionPane.showMessageDialog(null, "Update successful");
            String sql="update billing set item_name=?, item_price=?, qty=?, amt=? where prod_id=?";
            PreparedStatement pstm=Con.prepareStatement(sql);
            pstm.setInt(5, Integer.parseInt(pid.getText()));
            //pstm.setString(1, cid.getText());
            pstm.setString(1, pname.getText());
            //pstm.setString(2, itemprice.getText());
            pstm.setInt(2, Integer.parseInt(itemprice.getText()));
            //pstm.setString(7, mode.getText());
            //pstm.setString(8, date.getText());
            //pstm.setString(9, time.getText());
//            pstm.setString(2,pid.getText());
           pstm.setString(3,itemqty.getValue().toString());
           //pstm.setString(4,amt.getText());
           pstm.setInt(4, Integer.parseInt(amt.getText()));
            
            
            pstm.executeUpdate();
            JOptionPane.showMessageDialog(this, "Update successful");
            Con.close();
            
        }
        catch(SQLException e)
        {
        e.printStackTrace();
            
        }   
        }
    }//GEN-LAST:event_updateActionPerformed

    
    private void billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billActionPerformed
       Bill();
       
//       try{
//            ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
//            Statement st = con.createStatement();
//            String sql = "delete from billing";
//            ResultSet rs= st.executeQuery(sql);
//            DefaultTableModel tbModel = (DefaultTableModel)itemtable.getModel();
////            while(rs.next()){
////                
////                String bill_id = String.valueOf(rs.getInt("bill_id"));
////                String p_name= rs.getString("p_name");
////                String p_cost = String.valueOf(rs.getInt("p_cost"));
////                String p_qty = String.valueOf(rs.getInt("p_qty"));
////                String amt = String.valueOf(rs.getInt("p_amt"));
////                String tbdata[]={bill_id, p_name, p_cost, p_qty, amt};
////                DefaultTableModel tbModel1 = (DefaultTableModel)itemtable.getModel();
////                tbModel1.addRow(tbdata);
////            }
////            int sum = 0;
////            for(int i = 0; i<itemtable.getRowCount(); i++)
////                {
////                    sum = sum + Integer.parseInt(itemtable.getValueAt(i, 4).toString());
////                }
////                txttotal.setText(Integer.toString(sum));
//                    
//                
////            billid.setText("");
////            p_name.setText("");
////            itemprice.setText("");
////            itemqty.setValue(0);
////            amt.setText("");
////            txttotal.setText("");
//            con.close();
//        }
//        catch(Exception e){
//            System.out.println(e.getMessage());
//        }
    }//GEN-LAST:event_billActionPerformed

    private void addtobillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtobillActionPerformed
      try {
            // TODO add your handling code here:
             Class.forName("com.mysql.cj.jdbc.Driver");
          Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
            
            String sql=("insert into billing values(?,?,?,?,?)");
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setInt(1,Integer.parseInt(pid.getText()));
//            //pst.setString(2, cid.getText());
//            pst.setInt(2,Integer.parseInt(cid.getText()));
//            //pst.setString(3, pid.getText());
//            pst.setInt(3,Integer.parseInt(pid.getText()));
            pst.setString(2, pname.getText());
            pst.setString(3,itemprice.getText());
            pst.setInt(4,Integer.parseInt(itemqty.getValue().toString()));
//            pst.setString(8,mode.getText());
//            pst.setString(9,date.getText());
//            pst.setString(10,time.getText());
            pst.setInt(5,Integer.parseInt(amt.getText()));
            
           // pst.setString(5,procategory.getSelectedItem().toString());
            
             int row=pst.executeUpdate();
             DefaultTableModel model = (DefaultTableModel)itemtable.getModel();
             
                JOptionPane.showMessageDialog(null, "insersion successful");
            con.close();
            ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
            
        } 
       
        catch (Exception e) {
           e.printStackTrace();
        }
      
    }//GEN-LAST:event_addtobillActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(pid.getText().isEmpty())
        {
          JOptionPane.showMessageDialog(null, "select the BILL ID to be deleted");  
        }
        else{
            try{
              Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
              String bid=pid.getText();
              String Query="Delete from billing where prod_id="+bid;
              Statement st = con.createStatement();
              st.executeUpdate(Query);
              //SelectCustomer();
               JOptionPane.showMessageDialog(null, "Item deleted successfully");
                   ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
            }
            catch(Exception e){
                e.printStackTrace(); 
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        setVisible(false);
        Welcome wel = new Welcome();
        wel.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        try{
                 ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
     Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
            Statement st = con.createStatement();
            String sql = "select * from billing";
            ResultSet rs= st.executeQuery(sql);
            DefaultTableModel tbModel = (DefaultTableModel)itemtable.getModel();
            while(rs.next()){
                
                String bill_id = String.valueOf(rs.getInt("prod_id"));
                String p_name= rs.getString("item_name");
                String p_cost = String.valueOf(rs.getInt("item_price"));
                String p_qty = String.valueOf(rs.getInt("qty"));
                String amt = String.valueOf(rs.getInt("amt"));
                String tbdata[]={bill_id, p_name, p_cost, p_qty, amt};
                DefaultTableModel tbModel1 = (DefaultTableModel)itemtable.getModel();
                tbModel1.addRow(tbdata);
            }
            int sum = 0;
            for(int i = 0; i<itemtable.getRowCount(); i++)
                {
                    sum = sum + Integer.parseInt(itemtable.getValueAt(i, 4).toString());
                }
                txttotal.setText(Integer.toString(sum));
                    
                
//            billid.setText("");
//            p_name.setText("");
//            itemprice.setText("");
//            itemqty.setValue(0);
//            amt.setText("");
//            txttotal.setText("");
            con.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void itemqtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_itemqtyStateChanged
        int qty = Integer.parseInt(itemqty.getValue().toString());
        int price = Integer.parseInt(itemprice.getText());
        int tot = qty * price;
        
        amt.setText(String.valueOf(tot));
    }//GEN-LAST:event_itemqtyStateChanged

    private void pidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidKeyPressed
        String p_id = pid.getText(); 
        System.out.print(p_id);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
              
            try {
                
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
//                Statement st = con.createStatement();
                PreparedStatement pst;
                String sql = "select * from product where prod_id="+p_id;
                pst =(PreparedStatement)con.prepareStatement(sql);
//                pst.setString(1, p_id);
                ResultSet rs= pst.executeQuery(sql);
//                pst = con.prepareStatement("select * from product where id = ?");
//                pst.setString(1, pcode);
//                ResultSet rs = pst.executeQuery();
                
                if(rs.next() == false)
                {    
                    JOptionPane.showMessageDialog(this, "Product Code Not Found");  
                }
                else
                {
                    String p_name = rs.getString("prod_name");
                     String price = rs.getString("prod_price");
                     pname.setText(p_name.trim());
                     itemprice.setText(price.trim());
                }
            } 
            catch(Exception e){
            System.out.println(e.getMessage());
        }
//            catch (ClassNotFoundException ex) {
//                Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (SQLException ex) {
//                Logger.getLogger(pos.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }//GEN-LAST:event_pidKeyPressed

    private void printbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbillActionPerformed
        
            
        String msg= txttotal.getText();
         try{
              Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket?useSSL=false","root","9799");
              String Query="Delete from billing";
              Statement st = con.createStatement();
              st.executeUpdate(Query);
              //SelectCustomer();
              // JOptionPane.showMessageDialog(null, "customer deleted successfully");
                   ((DefaultTableModel)itemtable.getModel()).setNumRows(0);
            }
            catch(Exception e){
                e.printStackTrace(); 
            }
        
       // setVisible(false);
//        Welcome wel = new Welcome();
//        wel.setVisible(true);
//        
       // String msg= tx.getText();
       
        //billfinal bf = new billfinal();
        new billfinal(msg).setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_printbillActionPerformed

    
    private void itemtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemtableMouseClicked
         DefaultTableModel model = (DefaultTableModel)itemtable.getModel();
        int Myindex = itemtable.getSelectedRow();
        pid.setText(model.getValueAt(Myindex,0).toString());
        pname.setText(model.getValueAt(Myindex,1).toString());
        itemprice.setText(model.getValueAt(Myindex,2).toString());
        //qty.setText(model.getValueAt(Myindex,3).toString());
    }//GEN-LAST:event_itemtableMouseClicked
     int i=0;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new billing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton addtobill;
    private javax.swing.JLabel amount;
    private javax.swing.JLabel amount1;
    private javax.swing.JTextPane amt;
    private javax.swing.JButton bill;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JLabel item_name;
    private javax.swing.JLabel item_price;
    private javax.swing.JLabel item_qty;
    private javax.swing.JTextPane itemprice;
    private javax.swing.JSpinner itemqty;
    private javax.swing.JTable itemtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel p_id;
    private javax.swing.JTextPane pid;
    private javax.swing.JTextPane pname;
    private javax.swing.JButton printbill;
    private javax.swing.JTextPane txtbill;
    private javax.swing.JTextPane txttotal;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
